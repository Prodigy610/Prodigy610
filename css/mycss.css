/*document.addEventListener('mousemove', e => {
    Object.assign(document.documentElement, {
        style: `
        --move-x: ${(e.clientX - window.innerWidth / 2) * -.01}deg;
        --move-y: ${(e.clientY - window.innerHeight / 2) * -.02}deg;
        `
      
    })
})

if (window.DeviceOrientationEvent) {
    window.addEventListener('deviceorientation', (event) => {
        let gamma = event.gamma; // Лево-право (-90 до 90)
        let beta = event.beta;   // Верх-низ (-180 до 180)

        // Ограничим диапазон значений для плавности
        gamma = Math.min(Math.max(gamma, -30), 30);
        beta = Math.min(Math.max(beta, -30), 30);

        document.documentElement.style.setProperty('--move-x', gamma * 0.5 + 'deg');
        document.documentElement.style.setProperty('--move-y', beta * 0.5 + 'deg');
    });
} else {
    console.log('DeviceOrientationEvent не поддерживается этим устройством.');
}
*/





let initialGamma = 0;
let initialBeta = 0;
let isInitialized = false;

document.addEventListener('mousemove', e => {
    Object.assign(document.documentElement, {
        style: `
        --move-x: ${(e.clientX - window.innerWidth / 2) * -.01}deg;
        --move-y: ${(e.clientY - window.innerHeight / 2) * -.02}deg;
        `
    });
});

if (window.DeviceOrientationEvent) {
    window.addEventListener('deviceorientation', (event) => {
        let gamma = event.gamma;
        let beta = event.beta;


        if (!isInitialized) {
            initialGamma = gamma || 0;
            initialBeta = beta || 0;
            isInitialized = true;
        }


        let correctedGamma = gamma - initialGamma;
        let correctedBeta = beta - initialBeta;


        const gammaSensitivity = 0.5;
        const betaSensitivity = 0.5;


        correctedGamma = Math.min(Math.max(correctedGamma, -30), 30);
        correctedBeta = Math.min(Math.max(correctedBeta, -30), 30);

        document.documentElement.style.setProperty('--move-x', correctedGamma * gammaSensitivity + 'deg');
        document.documentElement.style.setProperty('--move-y', correctedBeta * betaSensitivity + 'deg');
    });
} else {
    console.log('DeviceOrientationEvent не поддерживается этим устройством.');
}
